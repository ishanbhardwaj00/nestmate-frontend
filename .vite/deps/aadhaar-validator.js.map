{
  "version": 3,
  "sources": ["../../node_modules/aadhaar-validator/src/index.js"],
  "sourcesContent": ["var d = [\n  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n  [1, 2, 3, 4, 0, 6, 7, 8, 9, 5],\n  [2, 3, 4, 0, 1, 7, 8, 9, 5, 6],\n  [3, 4, 0, 1, 2, 8, 9, 5, 6, 7],\n  [4, 0, 1, 2, 3, 9, 5, 6, 7, 8],\n  [5, 9, 8, 7, 6, 0, 4, 3, 2, 1],\n  [6, 5, 9, 8, 7, 1, 0, 4, 3, 2],\n  [7, 6, 5, 9, 8, 2, 1, 0, 4, 3],\n  [8, 7, 6, 5, 9, 3, 2, 1, 0, 4],\n  [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n];\n\n// permutation table p\nvar p = [\n  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n  [1, 5, 7, 6, 2, 8, 3, 0, 9, 4],\n  [5, 8, 0, 3, 7, 9, 6, 1, 4, 2],\n  [8, 9, 1, 6, 0, 4, 3, 5, 2, 7],\n  [9, 4, 5, 3, 1, 2, 6, 8, 7, 0],\n  [4, 2, 8, 6, 5, 7, 3, 9, 0, 1],\n  [2, 7, 9, 3, 8, 0, 6, 4, 1, 5],\n  [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]\n];\n\n// validates checksum\nfunction validate(array) {\n  var c = 0;\n  var invertedArray = invArray(array);\n  var has_only_numbers = !invertedArray.some(isNaN);\n  if (has_only_numbers == false) {\n    return false;\n  } else {\n    for (var i = 0; i < invertedArray.length; i++) {\n      c = d[c][p[(i % 8)][invertedArray[i]]];\n    }\n    return (c === 0);\n  }\n}\n\n// converts string or number to an array and inverts it\nfunction invArray(array) {\n  if (Object.prototype.toString.call(array) === \"[object Number]\") {\n    array = String(array);\n  }\n\n  if (Object.prototype.toString.call(array) === \"[object String]\") {\n    array = array.split(\"\").map(Number);\n  }\n  return array.reverse();\n}\n\nmodule.exports = {\n  isValidNumber: function (aadhaar_no) {\n    if (aadhaar_no.length != 12 || aadhaar_no.startsWith('0') || aadhaar_no.startsWith('1')) {\n      return false;\n    }\n    return validate(aadhaar_no);\n  },\n  isValidVID: function (aadhaar_vid_no) {\n    if (aadhaar_vid_no.length != 16) {\n      return false;\n    }\n    return validate(aadhaar_vid_no);\n  }\n};\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,QAAI,IAAI;AAAA,MACN,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,IAC/B;AAGA,QAAI,IAAI;AAAA,MACN,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC7B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,IAC/B;AAGA,aAAS,SAAS,OAAO;AACvB,UAAI,IAAI;AACR,UAAI,gBAAgB,SAAS,KAAK;AAClC,UAAI,mBAAmB,CAAC,cAAc,KAAK,KAAK;AAChD,UAAI,oBAAoB,OAAO;AAC7B,eAAO;AAAA,MACT,OAAO;AACL,iBAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,cAAI,EAAE,CAAC,EAAE,EAAG,IAAI,CAAE,EAAE,cAAc,CAAC,CAAC,CAAC;AAAA,QACvC;AACA,eAAQ,MAAM;AAAA,MAChB;AAAA,IACF;AAGA,aAAS,SAAS,OAAO;AACvB,UAAI,OAAO,UAAU,SAAS,KAAK,KAAK,MAAM,mBAAmB;AAC/D,gBAAQ,OAAO,KAAK;AAAA,MACtB;AAEA,UAAI,OAAO,UAAU,SAAS,KAAK,KAAK,MAAM,mBAAmB;AAC/D,gBAAQ,MAAM,MAAM,EAAE,EAAE,IAAI,MAAM;AAAA,MACpC;AACA,aAAO,MAAM,QAAQ;AAAA,IACvB;AAEA,WAAO,UAAU;AAAA,MACf,eAAe,SAAU,YAAY;AACnC,YAAI,WAAW,UAAU,MAAM,WAAW,WAAW,GAAG,KAAK,WAAW,WAAW,GAAG,GAAG;AACvF,iBAAO;AAAA,QACT;AACA,eAAO,SAAS,UAAU;AAAA,MAC5B;AAAA,MACA,YAAY,SAAU,gBAAgB;AACpC,YAAI,eAAe,UAAU,IAAI;AAC/B,iBAAO;AAAA,QACT;AACA,eAAO,SAAS,cAAc;AAAA,MAChC;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
